name: Update Bot IP Ranges

on:
  schedule:
    - cron: '0 2 * * *' # Daily at 2 AM UTC
  workflow_dispatch: # Allow manual trigger

jobs:
  update-bot-data:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Update bot IP ranges
        run: npm run update-ips
      
      - name: Check for changes
        id: git-check
        run: |
          git diff --exit-code || echo "changes=true" >> $GITHUB_OUTPUT
      
      - name: Commit and push changes
        if: steps.git-check.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/
          git commit -m "ðŸ¤– Update bot IP ranges

          â€¢ Refreshed IP ranges from official sources
          â€¢ Ensures accurate bot detection
          â€¢ Auto-generated by GitHub Actions"
          git push
      
      - name: Create patch release
        if: steps.git-check.outputs.changes == 'true'
        run: |
          npm version patch --no-git-tag-version
          git add package.json
          git commit -m "ðŸ”– Bump version for IP ranges update"
          git push
      
      - name: Create release tag
        if: steps.git-check.outputs.changes == 'true'
        run: |
          VERSION=$(node -p "require('./package.json').version")
          git tag "v$VERSION"
          git push origin "v$VERSION"
      
      - name: Publish to npm
        if: steps.git-check.outputs.changes == 'true'
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create release
        if: steps.git-check.outputs.changes == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.new_version }}
          release_name: v${{ steps.version.outputs.new_version }}
          body: |
            ## ðŸ¤– Bot IP Ranges Update
            
            IP ranges have been updated for accurate bot detection.

            ### ðŸš€ Install
            ```bash
            npm install bot-gate@latest
            ```
          draft: false
          prerelease: false